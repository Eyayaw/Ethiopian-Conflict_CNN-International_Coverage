setwd("~/Documents/cnni")
https://www.google.com/search?hl=en&q="Tigray"OR"Ethiopia"&site=cnn.com
paste(c('site:https://cnn.com',
'after:2020-11-02',
'"Ethiopia"+AND+"Tigray"+-"Covid"+-"Nile"'), collapse="+")
source("~/Documents/cnni/scrape_cnni.R", echo=TRUE)
library(rvest)
search_url = paste0("https://google.com/search?q=category=news+", search_text)
browseURL(search_url)
search_url = paste0("https://google.com/search?q=category=News+", search_text)
browseURL(search_url)
source("~/Documents/cnni/scrape_cnni.R", echo=TRUE)
search_text = paste('site:https://cnn.com',# website of CNN
'after:2020-11-02',    # since Nov 03, 2020, the war started
'"Ethiopia"+AND+"Tigray"+-"Covid"+-"Nile"', # exclude covid and Nile
'lr=en',
sep = "+")
search_url = paste0("https://google.com/search?q=category=News+", search_text)
search_url
browseURL(search_url)
source("~/Documents/cnni/scrape_cnni.R", echo=TRUE)
paste('site:https://cnn.com',# website of CNN
'after:2020-11-02',    # since Nov 03, 2020, the war started
'"Ethiopia"+AND+"Tigray"+-"Covid"+-"Nile"', # exclude covid and Nile
'lr=en',
sep = "+")
source("~/Documents/cnni/scrape_cnni.R", echo=TRUE)
structure(list(UtilityName = c("Alder Mutual Light Co Inc", "Avista Corporation",
"Asotin County PUD", "Benton County PUD", "Blaine City Light",
"Centralia City Light", "Chelan County PUD", "City of Cashmere",
"City of Chewelah, Electric Department", "City of Cheney", "City of Coulee Dam Light Dept",
"City of Ellensburg", "City of McCleary", "City of Milton", "City of Richland",
"City of Sumas", "Clallam County PUD", "Clark County PUD", "Clearwater Power",
"Columbia Rural Electric", "Cowlitz County PUD", "Douglas County PUD",
"Elmhurst Power & Light Co", "Ferry County PUD", "Franklin County PUD",
"Grant County PUD", "Grays Harbor County PUD", "Inland Power & Light",
"Jefferson County PUD", "Kittitas County PUD", "Klickitat County PUD",
"Kootenai Electric Cooperative Inc", "Lakeview Light & Power",
"Lewis County PUD", "Mason County PUD1", "Mason County PUD3",
"Modern Electric Water Company", "Nespelem Valley Electric Cooperative",
"Ohop Mutual Light Co", "Okanogan PUD", "Orcas Power and Light Coop",
"Pacific County PUD", "Pacific Power", "Parkland Light & Power",
"Pend Oreille PUD", "Peninsula Light Company", "Port Angeles City Light",
"Puget Sound Energy", "Seattle City Light", "Skamania PUD", "Snohomish County PUD",
"Tacoma Public Utilities", "Tanner Electric Cooperative", "Town of Eatonville",
"Town of Ruston", "Town of Steilacoom", "Vera Water & Power",
"Wahkiakum County PUD", "Whatcom County PUD", "Big Bend Electric",
"Northern Lights Inc"), InData = c(0L, 1L, 0L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L,
0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 1L, 0L, 1L, 0L, 0L, 0L, 0L, 0L,
0L, 1L, 0L, 1L, 0L, 0L, 1L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 1L), UtilityType = c("Coop", "Private", "Public",
"Public", "Public", "Public", "Public", "Public", "Public", "Public",
"Public", "Coop", "Coop", "Public", "Public", "Coop", "Public",
"Public", "Public", "Public", "Coop", "Public", "Public", "Public",
"Coop", "Coop", "Public", "Public", "Public", "Public", "Coop",
"Coop", "Public", "Coop", "Public", "Private", "Coop", "Public",
"Coop", "Public", "Private", "Public", "Public", "Public", "Public",
"Coop", "Public", "Public", "Public", "Coop", "Public", "Public",
"Coop", "Coop"), County1 = c("Pierce", "Whitman", "Asotin", "Benton",
"Whatcom", "Lewis", "Chelan", "Chelan", "Stevens", "Spokane",
"Grant", "Kittitas", "Grays Harbor", "Fulton County", "Benton County",
"Whatcom", "Clallam", "Clark", "Asotin  ", "Walla Walla", "Cowlitz",
"Douglas", "Pierce", "Ferry", "Franklin", "Grant", "Grays Harbor",
"Spokane", "Jefferson", "Kittitas", "Klickitat", "Spokane", "Grant",
"Lewis", "Mason", "Mason", "Spokane", "Okanogan", "Pierce", "Okanogan",
"San Juan", "Pacific", "Yakima", "Pierce", "Pend Oreille", "Pierce",
"Clallam", "Island", "King", "Skamania", "Snohomish", "Pierce",
"King", "Pierce", "Pierce", "Pierce", "Spokane", "Wahkiakum",
"Whatcom", "Adams", "Pend Oreille"), County2 = c("", "Spokane",
"", "", "", "", "", "", "", "", "Douglas", "", "", "", "", "",
"", "", "Whitman", "Columbia", "", "", "", "Okanogan", "", "",
"", "Whitman", "", "", "", "", "", "", "", "", "", "", "", "",
"", "", "Garfield", "", "", "", "", "King", "", "", "Island",
"Mason", "Pierce", "", "", "", "", "", "", "", ""), County3 = c("",
"Stevens", "", "", "", "", "", "", "", "", "Okanogan", "", "",
"", "", "", "", "", "Garfield", "", "", "", "", "", "", "", "",
"Lincoln", "", "", "", "", "", "", "", "", "", "", "", "", "",
"", "Columbia", "", "", "", "", "Kitsap", "", "", "", "Grays Harbor",
"", "", "", "", "", "", "", "", ""), County4 = c("", "Lincoln",
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "", "", "Stevens", "", "", "", "",
"", "", "", "", "", "", "", "", "", "", "Walla Walla", "", "",
"", "", "Kittitas", "", "", "", "Lewis", "", "", "", "", "",
"", "", "", ""), County5 = c("", "Asotin", "", "", "", "", "",
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
"", "", "", "", "Garfield", "", "", "", "", "", "", "", "", "",
"", "", "", "", "", "Benton", "", "", "", "", "Pierce", "", "",
"", "", "", "", "", "", "", "", "", "", ""), County6 = c("",
"Adams", "", "", "", "", "", "", "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "", "", "", "", "", "Adams", "",
"", "", "", "", "", "", "", "", "", "", "", "", "", "Kittitas",
"", "", "", "", "Skagit", "", "", "", "", "", "", "", "", "",
"", "", "", ""), County7 = c("", "Ferry", "", "", "", "", "",
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
"", "", "", "", "Columbia", "", "", "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "", "", "", "Thurston", "", "", "",
"", "", "", "", "", "", "", "", "", ""), County8 = c("", "Franklin",
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "", "", "Pend Orielle", "", "", "",
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
"Whatcom", "", "", "", "", "", "", "", "", "", "", "", "", ""
), County9 = c("", "Grant", "", "", "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
"Grant", "", "", "", "", "", "", "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
"", "", "", ""), County10 = c("", "Pend Oreille", "", "", "",
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
"", "", "", "", "", "", "Asotin", "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "", "", "")), row.names = c(NA, 61L
), class = "data.frame")
df = .Last.value
View(df)
reshape(df,
direction = 'long',
varying = grep('Country\\d+', names(df), value = T))
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T))
grep('County\\d+', names(df), value = T)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T), idvar = 1:3)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T), idvar = list(1:3))
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T), ids = list(1:3))
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T), sep = "")
View(.Last.value)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T), id='UtilityName')
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T), ids='UtilityName')
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T), idvar='UtilityName')
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T), idvar='UtilityName', sep = "")
View(.Last.value)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T), sep = "")
View(.Last.value)
View(df)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T), v.names = 'county')
View(.Last.value)
View(df)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T),
timevar = 'county_id',
v.names = 'county')
View(.Last.value)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T),
timevar = 'county_id',
v.names = 'county',
idvar = 'UtilityName')
View(.Last.value)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T),
timevar = 'county_id',
v.names = 'county',
ids = 'UtilityName')
View(.Last.value)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T),
timevar = 'county_id',
v.names = 'county',
idvar = 'UtilityName')
View(.Last.value)
View(df)
tidyr::gather(df, -c(1:4))
tidyr::gather(df, 1:4, -c(1:4))
tidyr::gather(df, 1:4, 5:13)
tidyr::gather(df, value=5:13)
tidyr::gather(df, key=1, value=5:13)
tidyr::gather(df)
View(.Last.value)
tidyr::gather(df, County1:County10)
tidyr::gather(df, value=County1:County10)
tidyr::gather(df, key = UtilityName, value=County1:County10)
tidyr::gather(df, key = 'UtilityName', grep('County\\d+', names(df), value = T))
tidyr::gather(df, value =  grep('County\\d+', names(df), value = T))
tidyr::gather(df, key='county', value =  grep('County\\d+', names(df), value = T))
data.table::melt.data.table(df, measure.vars = 5:13)
data.table::melt.data.table(data.table::as.data.table(df), measure.vars = 5:13)
View(.Last.value)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T),
timevar = 'county_id',
v.names = 'county_name',
idvar = 'UtilityName')
View(.Last.value)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T),
timevar = 'county_id',
v.names = 'county_name',
idvar = c('UtilityName', 'InData', "UtilityType"))
View(.Last.value)
grep('County\\d+', names(df), value = T, invert = T)
reshape(df,
direction = 'long',
varying = grep('County\\d+', names(df), value = T),
timevar = 'county_id',
v.names = 'county_name',
idvar = c('UtilityName', 'InData', "UtilityType"))
df_long = .Last.value
rownames(.Last.value) = NULL
df_long
View(df_long)
rownames(.Last.value) = NA
rownames(df_long) = NULL
df_long[df_long$county_name == "", 'county_name'] = NA
df_long
head(df_long)
head(df_long, 10)
aggregate(InData~county_name, df_long, sum)
# Google search query
search_text = paste('site:https://cnn.com',# website of CNN
'after:2020-11-02',    # since Nov 03, 2020, the war started
'"Ethiopia"+AND+"Tigray"+-"Covid"+-"Nile"', # exclude covid and Nile
'&lr=lang_en',# search in English
sep = "+")
search_text
cat(search_text)
read_html('https://news.google.com/search?q=site%3Acnn.com%20%22Tigray%22%20AND%20%22Ethiopia%22%20after%3A2020-11-02%20-%22Nile%22%20-%22Covid%22&hl=en-US&gl=US&ceid=US%3Aen') |> html_elements("h3")
read_html('https://news.google.com/search?q=site%3Acnn.com%20%22Tigray%22%20AND%20%22Ethiopia%22%20after%3A2020-11-02%20-%22Nile%22%20-%22Covid%22&hl=en-US&gl=US&ceid=US%3Aen') |> html_elements("h1")
read_html('https://news.google.com/search?q=site%3Acnn.com%20%22Tigray%22%20AND%20%22Ethiopia%22%20after%3A2020-11-02%20-%22Nile%22%20-%22Covid%22&hl=en-US&gl=US&ceid=US%3Aen')
'https://news.google.com/search?q=site%3Acnn.com%20%22Tigray%22%20AND%20%22Ethiopia%22%20after%3A2020-11-02%20-%22Nile%22%20-%22Covid%22&hl=en-US&gl=US&ceid=US%3Aen' |> browseURL()
source("~/Documents/cnni/scrape_cnni.R", echo=TRUE)
'https://edition.cnn.com/search?q=Ethiopia+Tigray&category=us,politics,world,opinion,health&size=10&from=100' |> browseURL()
"https://edition.cnn.com/search?size=100&q=Ethiopia%20AND%20Tigray" |>
read_html() |>
html_elements('.cnn-search__result-headline a')
"https://edition.cnn.com/search?size=100&q=Ethiopia%20AND%20Tigray" |>
read_html() |>
html_nodes('.cnn-search__result-headline a')
"https://edition.cnn.com/search?size=100&q=Ethiopia%20AND%20Tigray" |>
read_html()
View(.Last.value)
"https://edition.cnn.com/search?size=100&q=Ethiopia%20AND%20Tigray" |>
read_html() -> res
res$doc
res$node
res
html_element(res, 'a')
html_elements(res, 'a')
View(.Last.value)
html_elements(res, 'a') |> html_text2()
read_html(search_url) -> res
html_elements(res, 'a') |> html_text2()
html_elements(res, '.JQe2Ld') |> html_text2()
html_elements(res, 'h2')
html_elements(res, 'p')
res
html_text(res)
html_text2(res)
reticulate::source_python('~/Documents/cnni/scrape_cnni.py')
response
reticulate::source_python('~/Documents/cnni/scrape_cnni.py')
reticulate::repl_python()
param = paste(
'site:https://cnn.com',# website of CNN
'after:2020-11-02',# since Nov 03, 2020, the war started
'"Ethiopia"+AND+"Tigray"+-"Covid"+-"Nile"',# exclude covid and Nile
"&tbm=nws",#search on News tab
'&lr=lang_en',# search in English
'tbs=sbd:1', #sort by date
sep = "+"
)
search_url = paste0("https://google.com/news?q=", param)
browseURL(search_url)
search_url |>
read_html() |>
html_nodes('a')
search_url |>
read_html()
res = .Last.value
html_text2(res)
search_url
cat(search_url)
search_url |>
read_html() |>
html_elements('h3')
search_url |>
read_html() -> res
html_elements(res, 'h3')
res
